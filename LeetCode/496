class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        
        Map<Integer, Integer> res = new HashMap<>();
        Stack<Integer> S = new Stack<>();
        
        for (int i = nums2.length - 1; i >= 0; i--) 
        {
            if(S.isEmpty())
            {
                res.put(nums2[i], -1);
            }
            else if (!S.isEmpty() && S.peek() > nums2[i]) 
            {
                res.put(nums2[i], S.peek());
            }
            else if(!S.isEmpty() && nums2[i] >= S.peek())
            {
                while (!S.isEmpty() && nums2[i] >= S.peek())
                {
                    S.pop();
                }
                if(!S.isEmpty())
                {
                    res.put(nums2[i], S.peek());
                }
                else 
                {
                    res.put(nums2[i], -1);
                }
            }
            S.push(nums2[i]);
        }

        int[] ans = new int[nums1.length];
        
        for (int i = 0; i < nums1.length; i++) 
        {
            ans[i] = res.get(nums1[i]);
        }

        return ans;
    }
}
